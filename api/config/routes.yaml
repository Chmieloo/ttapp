# PLAYER ROUTES

players:
  path: /players
  controller: App\Controller\PlayerController::getPlayers
  methods: [GET]

player:
  path: /players/{id}
  controller: App\Controller\PlayerController::getPlayerById
  methods: [GET]
  requirements:
    id: '\d+'

player_results:
  path: /players/{id}/results
  controller: App\Controller\PlayerController::getPlayerResults
  methods: [GET]
  requirements:
    id: '\d+'

player_schedule:
  path: /players/{id}/schedule
  controller: App\Controller\PlayerController::getPlayerSchedule
  methods: [GET]
  requirements:
    id: '\d+'

player_add:
  path: /players/add
  controller: App\Controller\PlayerController::addPlayer
  methods: [POST]

# TOURNAMENT ROUTES

tournaments:
  path: /tournaments
  controller: App\Controller\TournamentController::getTournaments
  methods: [GET]

tournament_add:
  path: /tournaments/add
  controller: App\Controller\TournamentController::addTournament
  methods: [POST]

tournament:
  path: /tournaments/{id}
  controller: App\Controller\TournamentController::getTournamentById
  methods: [GET]
  requirements:
    id: '\d+'

tournament_standings:
  path: /tournaments/{id}/standings
  controller: App\Controller\TournamentController::getStandings
  requirements:
    id: '\d+'

tournament_results:
  path: /tournaments/{tournamentId}/results/{numberOfResults}
  controller: App\Controller\TournamentController:getTournamentResults
  requirements:
    tournamentId: '\d+'
    numberOfResults: '\d+'

tournament_schedule_overdue:
  path: /tournaments/{tournamentId}/overdue/{numberOfFixtures}
  controller: App\Controller\TournamentController:getTournamentOverdueSchedule
  requirements:
    tournamentId: '\d+'
    numberOfFixtures: '\d+'

tournament_schedule:
  path: /tournaments/{tournamentId}/fixtures/{numberOfFixtures}
  controller: App\Controller\TournamentController:getTournamentSchedule
  requirements:
    tournamentId: '\d+'
    numberOfFixtures: '\d+'

tournament_matches_fullfeed:
  path: /tournaments/{tournamentId}/matches/fullfeed
  controller: App\Controller\TournamentController:getTournamentMatchesFullfeed
  requirements:
    tournamentId: '\d+'

# PLAYOFFS

tournament_playoffs:
  path: /playoffs/{tournamentId}
  controller: App\Controller\TournamentController:getTournamentPlayoffsData
  requirements:
    tournamentId: '\d+'

tournament_playoffs_division:
  path: /playoffs/{tournamentId}/group/{groupId}
  controller: App\Controller\TournamentController:getTournamentPlayoffsDivisionData
  requirements:
    tournamentId: '\d+'
    groupId: '\d+'

tournament_playoffs_divisions:
  path: /playoffs/{tournamentId}/groups
  controller: App\Controller\TournamentController:getTournamentPlayoffsDivisionsData
  requirements:
    tournamentId: '\d+'

# GROUP ROUTES

groups_by_tournament:
  path: /groups/tournaments/{id}
  controller: App\Controller\TournamentGroupController::getTournamentGroupsByTournamentId
  methods: [GET]
  requirements:
    id: '\d+'

group_add:
  path: /groups/add
  controller: App\Controller\TournamentGroupController::addTournamentGroup
  methods: [POST]

# MATCH MODE ROUTES

match_mode:
  path: /matches/modes/{id}
  controller: App\Controller\MatchModeController::getMatchModeById

match_modes:
  path: /matches/modes
  controller: App\Controller\MatchModeController::getMatchModes

# MATCH ROUTES

match_finish:
  path: /matches/{matchId}/finish
  controller: App\Controller\MatchController::finishSet
  methods: [GET]
  requirements:
    matchId: '\d+'

match_walkover:
  path: /matches/{matchId}/walkover/{playerId}
  controller: App\Controller\MatchController::walkover
  methods: [GET]
  requirements:
    matchId: '\d+'
    playerId: '\d+'

match:
  path: /matches/{id}
  controller: App\Controller\MatchController::getMatch
  methods: [GET]
  requirements:
    id: '\d+'

match_server:
  path: /matches/{id}/server
  controller: App\Controller\MatchController::setServer
  methods: [GET]
  requirements:
    id: '\d+'

match_add:
  path: /matches/add/official
  controller: App\Controller\MatchController::addMatch
  methods: [POST]

match_save:
  path: /matches/save
  controller: App\Controller\MatchController::saveMatch
  methods: [POST]

matches_all:
  path: /matches
  controller: App\Controller\MatchController:getAllMatches

# POINTS

points_save:
  path: /points/add
  controller: App\Controller\PointController::addPoint
  methods: [POST]

points_remove:
  path: /points/del
  controller: App\Controller\PointController::deletePoint
  methods: [POST]